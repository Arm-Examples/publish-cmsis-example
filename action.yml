#
# Copyright (C) 2020-2024 Arm Limited or its affiliates and Contributors. All rights reserved.
# SPDX-License-Identifier: Apache-2.0
#
name: publish-cmsis-example
description: GitHub action to publish CMSIS example to keil.arm.com
inputs:
  branch:
    description: "Branch to get the project from if not `main`"
    required: false
    default: ${{ github.head_ref }}
  project-file:
    description: "Path to the project to publish (file with `.csolution.yml` extension) (required) "
    required: true
  dry-run:
    description: "Whether to just complete a dry-run (`true` or `false`). This can be useful to verify a project is publishable without actually making it available on `keil.arm.com`"
    required: false
    default: "false"
  API_TOKEN:
    description: "API token for publishing projects (required)"
    required: true
runs:
  using: "composite"
  steps:
    - name: Install publishing tool
      shell: bash
      run: |
        echo "deb [trusted=yes] https://artifacts.tools.arm.com/tools-deb bionic main" | sudo tee -a /etc/apt/sources.list.d/artifactory.list          
        sudo apt-get update
        sudo apt install -y cmsis-example-importer
        sudo rm /etc/apt/sources.list.d/artifactory.list  
        sudo apt-get clean
    - name: Publish project
      if: ${{ inputs.dry-run == 'false' || inputs.dry-run == false }}
      run: |
        cmsis-example-importer import repo -t ${{ inputs.API_TOKEN }} -w https://solar-search.api.keil.arm.com/ -u https://software.api.keil.arm.com/ -p ${{ github.workspace }}/${{ inputs.project-file }} --git --git-root ${{ github.workspace }} -s Token --verbose --intermediate-directory /tmp/intdir --clean-intermediate-directory false
      shell: bash
    - name: Test project is publishable (dry-run)
      if: ${{ inputs.dry-run != 'false' && inputs.dry-run != false }}
      run: |
        cmsis-example-importer import repo -t ${{ inputs.API_TOKEN }} -w https://solar-search.api.keil.arm.com/ -u https://software.api.keil.arm.com/ -p ${{ github.workspace }}/${{ inputs.project-file }} --git --git-root ${{ github.workspace }} -s Token --verbose --intermediate-directory /tmp/intdir --clean-intermediate-directory false --dry-run
      shell: bash

